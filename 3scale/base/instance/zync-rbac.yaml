kind: Secret
apiVersion: v1
metadata:
    name: threescale-registry-auth
    namespace: openshift-3scale
# change this data once it is updated
data:
  .dockercfg: >-
    
type: kubernetes.io/dockercfg
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zync-que-sa
  namespace: openshift-3scale
imagePullSecrets:
- name: threescale-registry-auth
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: zync-que-rolebinding
  namespace: openshift-3scale
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: zync-que-role
subjects:
- kind: ServiceAccount
  name: zync-que-sa